{"version":3,"sources":["../../../src/server/routes/bookmarks.js"],"names":["bookmarks","Router","get","req","res","status","json","name","user","userDb","session","passport","result","error","post","newBookmark","body","created","Date","getTime","url","match","errors","then","send","catch","delete","bookmarkId","params","id","message","patch","site","updated"],"mappings":"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","file":"bookmarks.js","sourcesContent":["import express from 'express'\nimport { ObjectId } from 'mongodb'\n\nimport ensureAuthenticated from '../auth/passport'\nimport { addBookmark, getBookmarks, deleteBookmark, editBookmark, discover } from '../models/db'\nimport { validateBookmark, validateEdit } from '../models/bookmark'\n\nconst bookmarks = express.Router()\n\nbookmarks.get('/protected', ensureAuthenticated, (req, res) => {\n  res.status(200).json({ name: res.req.user.name })\n})\n\n\nbookmarks.get('/bookmarks', ensureAuthenticated, async (req, res) => {\n  const userDb = req.session.passport.user\n\n  try {\n    const result = await getBookmarks(userDb)\n    res.json(result)\n  } catch (error) { res.status(500).json(`Internal Server Error: ${error}`) }\n})\n\n\nbookmarks.get('/discover', ensureAuthenticated, async (req, res) => {\n  const userDb = req.session.passport.user\n\n  try {\n    const result = await discover(userDb)\n    res.json(result)\n  } catch (error) { res.status(500).json(`Internal Server Error: ${error}`) }\n})\n\nbookmarks.post('/bookmarks', ensureAuthenticated, (req, res) => {\n  const userDb = req.session.passport.user\n  const newBookmark = req.body\n  newBookmark.created = new Date().getTime()\n\n  if (!newBookmark.url.match(/^https?/)) newBookmark.url = `http://${newBookmark.url}`\n\n  const errors = validateBookmark(newBookmark)\n  if (errors) {\n    res.status(400).json(errors)\n    return\n  }\n\n  addBookmark(`bookmarks.${userDb}`, newBookmark)\n    .then(() => res.status(200).send('1 record inserted'))\n    .catch(error => res.status(500).json(`Internal Server Error: ${error}`))\n})\n\nbookmarks.delete('/bookmarks/:id', ensureAuthenticated, async (req, res) => {\n  const userDb = req.session.passport.user\n  let bookmarkId\n  try {\n    bookmarkId = new ObjectId(req.params.id)\n  } catch (error) {\n    res.status(422).json(`Invalid id format: ${error}`)\n    return\n  }\n\n  try {\n    await deleteBookmark(`bookmarks.${userDb}`, bookmarkId)\n    res.status(200).json('Successfully deleted object')\n  } catch (error) {\n    if (error.message === '404') {\n      res.status(404).json('Bookmark not found')\n      return\n    }\n    res.status(500).json(`Internal Server Error: ${error}`)\n  }\n})\n\nbookmarks.patch('/bookmarks', ensureAuthenticated, async (req, res) => {\n  const userDb = req.session.passport.user\n  const site = req.body\n  site.updated = new Date().getTime()\n\n  const errors = validateEdit(site)\n  if (errors) {\n    res.status(422).json(errors)\n    return\n  }\n\n  try {\n    await editBookmark(`bookmarks.${userDb}`, site)\n    res.status(200).json('Edit site success')\n  } catch (error) {\n    res.status(422).json(`Invalid id format: ${error}`)\n  }\n})\n\nexport default bookmarks\n"]}