{"version":3,"sources":["../../../src/server/routes/bookmarks.js"],"names":["bookmarks","Router","get","req","res","status","json","name","user","userDb","session","passport","result","error","message","post","newBookmark","body","created","Date","getTime","errors","then","send","catch","delete","bookmarkId","params","id","patch","site","updated"],"mappings":"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","file":"bookmarks.js","sourcesContent":["import express from 'express';\nimport { ObjectId } from 'mongodb';\n\nimport ensureAuthenticated from '../auth/passport';\nimport { addBookmark, getBookmarks, deleteBookmark, editBookmark, discover } from '../models/db';\nimport { validateBookmark, validateEdit } from '../models/bookmark';\n\nconst bookmarks = express.Router();\n\nbookmarks.get('/protected', ensureAuthenticated, (req, res) => {\n  res.status(200).json({ name: res.req.user.name });\n});\n\n\nbookmarks.get('/bookmarks', ensureAuthenticated, async (req, res) => {\n  const userDb = req.session.passport.user;\n\n  try {\n    const result = await getBookmarks(userDb);\n    res.json(result);\n  } catch (error) { res.status(500).json({ message: `Internal Server Error: ${error}` }); }\n});\n\n\nbookmarks.get('/discover', ensureAuthenticated, async (req, res) => {\n  const userDb = req.session.passport.user;\n\n  try {\n    const result = await discover(userDb);\n    res.json(result);\n  } catch (error) { res.status(500).json({ message: `Internal Server Error: ${error}` }); }\n});\n\nbookmarks.post('/bookmarks', ensureAuthenticated, (req, res) => {\n  const userDb = req.session.passport.user;\n  const newBookmark = req.body;\n  newBookmark.created = new Date().getTime();\n  const errors = validateBookmark(newBookmark);\n  if (errors) {\n    res.status(400).json(errors);\n    return;\n  }\n\n  addBookmark(`bookmarks.${userDb}`, newBookmark)\n    .then(() => res.status(200).send('1 record inserted'))\n    .catch(error => res.status(500).json({ message: `Internal Server Error: ${error}` }));\n});\n\nbookmarks.delete('/bookmarks/:id', ensureAuthenticated, async (req, res) => {\n  const userDb = req.session.passport.user;\n  let bookmarkId;\n  try {\n    bookmarkId = new ObjectId(req.params.id);\n  } catch (error) {\n    res.status(422).json({ message: `Invalid id format: ${error}` });\n    return;\n  }\n\n  try {\n    await deleteBookmark(`bookmarks.${userDb}`, bookmarkId);\n    res.status(200).json({ message: 'Successfully deleted object' });\n  } catch (error) {\n    if (error.message === '404') {\n      res.status(404).json({ message: 'Bookmark not found' });\n      return;\n    }\n    res.status(500).json({ message: `Internal Server Error: ${error}` });\n  }\n});\n\nbookmarks.patch('/bookmarks', ensureAuthenticated, async (req, res) => {\n  const userDb = req.session.passport.user;\n  const site = req.body;\n  site.updated = new Date().getTime();\n\n  const errors = validateEdit(site);\n  if (errors) {\n    res.status(422).json(errors);\n    return;\n  }\n\n  try {\n    await editBookmark(`bookmarks.${userDb}`, site);\n    res.status(200).json({ message: 'Edit site success' });\n  } catch (error) {\n    res.status(422).json({ message: `Invalid id format: ${error}` });\n  }\n});\n\nexport default bookmarks;\n"]}