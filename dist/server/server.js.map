{"version":3,"sources":["../../src/server/server.js"],"names":["install","LocalStrategy","require","Strategy","app","use","static","json","secret","saveUninitialized","resave","initialize","session","serializeUser","user","done","deserializeUser","username","password","name","message","userDb","connect","then","connection","catch","console","log","error","get","ensureAuthenticated","req","res","send","collection","findOne","users","post","authenticate","next","isAuthenticated","filter","query","status","bookmarkDb","find","toArray","metadata","total_count","bookmarks","length","_metadata","records","newSite","body","created","Date","getTime","err","validateSite","insertOne","db","_id","result","insertedId","limit","delete","bookmarkId","params","id","deleteOne","deleteResult","n","sendFile","resolve","listen"],"mappings":"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","file":"server.js","sourcesContent":["import express from 'express'\nimport bodyParser from 'body-parser'\nimport { MongoClient, ObjectId } from 'mongodb'\nimport Bookmark from './bookmark.js'\nimport SourceMapSupport from 'source-map-support'\nimport path from 'path'\nimport passport from 'passport'\nimport session from 'express-session'\nSourceMapSupport.install()\n\nconst LocalStrategy = require('passport-local').Strategy\nconst app = express()\napp.use(express.static('dist'))\napp.use(bodyParser.json())\n\napp.use(session({\n  secret: 'secret',\n  saveUninitialized: true,\n  resave: true\n}))\n\n//\n// Passport init\n//\napp.use(passport.initialize())\napp.use(passport.session())\n\npassport.serializeUser(function (user, done) {\n  done(null, user)\n})\n\npassport.deserializeUser(function (user, done) {\n  done(null, user)\n})\n\n  /*\npassport.deserializeUser(function (id, done) {\n  userDb.findById(id, function (err, user) {\n    done(err, user)\n  })\n})\n*/\n\npassport.use(new LocalStrategy(\n  function (username, password, done) {\n    if (username === 'admin' && password === 'admin') {\n      return done(null, {name: 'admin'})\n    }\n    return done(null, false, {message: 'bad login info'})\n  }\n))\n\n    /*\n    userDb.findOne({ username: username }, function (err, user) {\n      if (err) { return done(err) }\n      if (!user) {\n        return done(null, false, { message: 'Incorrect username.' })\n      }\n      if (!user.validPassword(password)) {\n        return done(null, false, { message: 'Incorrect password.' })\n      }\n      return done(null, user)\n    })\n  }\n))\n*/\n\nlet userDb\n\nMongoClient.connect('mongodb://localhost/loginapp')\n  .then(connection => {\n    userDb = connection\n  })\n  .catch(error => {\n    console.log('ERROR: ', error)\n  })\n\napp.get('/protected', ensureAuthenticated, function (req, res) {\n  res.send('hi')\n})\n\napp.get('/showusers', (req, res) => {\n  userDb.collection('users').findOne({username: 'lockwood'})\n    .then(users => {\n      console.log(users)\n    })\n    .catch(error => {\n      console.log(error)\n    })\n  res.send('sent')\n})\n\napp.post('/login', passport.authenticate('local'), function (req, res) {\n  res.send('logged in')\n})\n\nfunction ensureAuthenticated (req, res, next) {\n  if (req.isAuthenticated()) {\n    return next()\n  } else {\n    res.send('not authenticated')\n  }\n}\n\n\napp.get('/api/bookmarks', (req, res) => {\n  const filter = {}\n  if (req.query.status) {\n    filter.status = req.query.status\n  }\n  bookmarkDb.collection('bookmarks').find(filter).toArray()\n    .then(bookmarks => {\n      const metadata = { total_count: bookmarks.length }\n      res.json({ _metadata: metadata, records: bookmarks })\n    })\n    .catch(error => {\n      console.log(error)\n      res.status(500).json({ message: `Internal Server Error: ${error}` })\n    })\n})\n\napp.post('/api/bookmarks', (req, res) => {\n  const newSite = req.body\n  newSite.created = new Date().getTime()\n  const err = Bookmark.validateSite(newSite)\n  console.log(err)\n  if (err) {\n    res.status(422).json({ message: `Invalid request: ${err}` })\n    return\n  }\n\n  bookmarkDb.collection('bookmarks').insertOne(newSite)\n    .then(result =>\n      db.collection('bookmarks').find({ _id: result.insertedId }).limit(1).next()\n      ).then(newSite => {\n        res.json(newSite)\n      }).catch(error => {\n        console.log(error)\n        res.status(500).json({ message: `Internal Server Error: ${error}` })\n      })\n})\n\napp.delete('/api/bookmarks/:id', (req, res) => {\n  let bookmarkId\n  try {\n    bookmarkId = new ObjectId(req.params.id)\n  } catch (error) {\n    res.status(422).json({ message: `Invalid issue ID format: ${error}` })\n    return\n  }\n\n  bookmarkDb.collection('bookmarks').deleteOne({ _id: bookmarkId }).then((deleteResult) => {\n    if (deleteResult.result.n === 1) res.json({ status: 'OK' })\n    else res.json({ status: 'Warning: object not found' })\n  })\n    .catch(error => {\n      console.log(error)\n      res.status(500).json({ message: `Internal Server Error: ${error}` })\n    })\n})\n\napp.get('*', (req, res) => {\n  res.sendFile(path.resolve('dist/index.html'))\n})\n\nlet bookmarkDb\n\nMongoClient.connect('mongodb://localhost/bookmarks')\n  .then(connection => {\n    bookmarkDb = connection\n  })\n  .catch(error => {\n    console.log('ERROR: ', error)\n  })\n\napp.listen(3000, () => {\n  console.log('App started on port 3000')\n})\n"]}