{"version":3,"sources":["../../src/server/server.js"],"names":["install","app","use","static","json","get","req","res","filter","query","status","db","collection","find","toArray","then","metadata","total_count","bookmarks","length","_metadata","records","catch","console","log","error","message","post","newSite","body","created","Date","getTime","err","validateSite","insertOne","_id","result","insertedId","limit","next","sendFile","resolve","connect","connection","listen"],"mappings":";;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;AACA,2BAAiBA,OAAjB;;AAEA,IAAMC,MAAM,wBAAZ;AACAA,IAAIC,GAAJ,CAAQ,kBAAQC,MAAR,CAAe,MAAf,CAAR;AACAF,IAAIC,GAAJ,CAAQ,qBAAWE,IAAX,EAAR;;AAEAH,IAAII,GAAJ,CAAQ,gBAAR,EAA0B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACtC,MAAMC,SAAS,EAAf;AACA,MAAIF,IAAIG,KAAJ,CAAUC,MAAd,EAAsB;AACpBF,WAAOE,MAAP,GAAgBJ,IAAIG,KAAJ,CAAUC,MAA1B;AACD;AACDC,KAAGC,UAAH,CAAc,WAAd,EAA2BC,IAA3B,CAAgCL,MAAhC,EAAwCM,OAAxC,GACGC,IADH,CACQ,qBAAa;AACjB,QAAMC,WAAW,EAAEC,aAAaC,UAAUC,MAAzB,EAAjB;AACAZ,QAAIH,IAAJ,CAAS,EAAEgB,WAAWJ,QAAb,EAAuBK,SAASH,SAAhC,EAAT;AACD,GAJH,EAKGI,KALH,CAKS,iBAAS;AACdC,YAAQC,GAAR,CAAYC,KAAZ;AACAlB,QAAIG,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB,EAAEsB,qCAAmCD,KAArC,EAArB;AACD,GARH;AASD,CAdD;;AAgBAxB,IAAI0B,IAAJ,CAAS,gBAAT,EAA2B,UAACrB,GAAD,EAAMC,GAAN,EAAc;AACvC,MAAMqB,UAAUtB,IAAIuB,IAApB;AACAD,UAAQE,OAAR,GAAkB,IAAIC,IAAJ,GAAWC,OAAX,EAAlB;AACA,MAAMC,MAAM,mBAASC,YAAT,CAAsBN,OAAtB,CAAZ;AACAL,UAAQC,GAAR,CAAYS,GAAZ;AACA,MAAIA,GAAJ,EAAS;AACP1B,QAAIG,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB,EAAEsB,+BAA6BO,GAA/B,EAArB;AACA;AACD;;AAEDtB,KAAGC,UAAH,CAAc,WAAd,EAA2BuB,SAA3B,CAAqCP,OAArC,EAA8Cb,IAA9C,CAAmD;AAAA,WACjDJ,GAAGC,UAAH,CAAc,WAAd,EAA2BC,IAA3B,CAAgC,EAAEuB,KAAKC,OAAOC,UAAd,EAAhC,EAA4DC,KAA5D,CAAkE,CAAlE,EAAqEC,IAArE,EADiD;AAAA,GAAnD,EAEIzB,IAFJ,CAES,mBAAW;AAChBR,QAAIH,IAAJ,CAASwB,OAAT;AACD,GAJH,EAIKN,KAJL,CAIW,iBAAS;AAChBC,YAAQC,GAAR,CAAYC,KAAZ;AACAlB,QAAIG,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB,EAAEsB,qCAAmCD,KAArC,EAArB;AACD,GAPH;AAQD,CAlBD;;AAoBAxB,IAAII,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,MAAIkC,QAAJ,CAAa,eAAKC,OAAL,CAAa,iBAAb,CAAb;AACD,CAFD;;AAIA,IAAI/B,WAAJ;AACA,qBAAYgC,OAAZ,CAAoB,+BAApB,EACG5B,IADH,CACQ,sBAAc;AAClBJ,OAAKiC,UAAL;AACA3C,MAAI4C,MAAJ,CAAW,IAAX,EAAiB,YAAM;AACrBtB,YAAQC,GAAR,CAAY,0BAAZ;AACD,GAFD;AAGD,CANH,EAOGF,KAPH,CAOS,iBAAS;AACdC,UAAQC,GAAR,CAAY,SAAZ,EAAuBC,KAAvB;AACD,CATH","file":"server.js","sourcesContent":["import express from 'express'\nimport bodyParser from 'body-parser'\nimport { MongoClient } from 'mongodb'\nimport Bookmark from './bookmark.js'\nimport SourceMapSupport from 'source-map-support'\nimport path from 'path'\nSourceMapSupport.install()\n\nconst app = express()\napp.use(express.static('dist'))\napp.use(bodyParser.json())\n\napp.get('/api/bookmarks', (req, res) => {\n  const filter = {}\n  if (req.query.status) {\n    filter.status = req.query.status\n  }\n  db.collection('bookmarks').find(filter).toArray()\n    .then(bookmarks => {\n      const metadata = { total_count: bookmarks.length }\n      res.json({ _metadata: metadata, records: bookmarks })\n    })\n    .catch(error => {\n      console.log(error)\n      res.status(500).json({ message: `Internal Server Error: ${error}` })\n    })\n})\n\napp.post('/api/bookmarks', (req, res) => {\n  const newSite = req.body\n  newSite.created = new Date().getTime()\n  const err = Bookmark.validateSite(newSite)\n  console.log(err)\n  if (err) {\n    res.status(422).json({ message: `Invalid request: ${err}` })\n    return\n  }\n\n  db.collection('bookmarks').insertOne(newSite).then(result =>\n    db.collection('bookmarks').find({ _id: result.insertedId }).limit(1).next()\n    ).then(newSite => {\n      res.json(newSite)\n    }).catch(error => {\n      console.log(error)\n      res.status(500).json({ message: `Internal Server Error: ${error}` })\n    })\n})\n\napp.get('*', (req, res) => {\n  res.sendFile(path.resolve('dist/index.html'))\n})\n\nlet db\nMongoClient.connect('mongodb://localhost/bookmarks')\n  .then(connection => {\n    db = connection\n    app.listen(3000, () => {\n      console.log('App started on port 3000')\n    })\n  })\n  .catch(error => {\n    console.log('ERROR: ', error)\n  })\n"]}