{"version":3,"sources":["../../../src/server/models/bookmark.js"],"names":["siteFieldType","name","url","created","author","tags","comment","editFieldType","updated","validUrl","match","validateBookmark","site","errors","Object","keys","forEach","field","type","push","length","validateEdit"],"mappings":";AACA,MAAMA,gBAAgB;AACpBC,QAAM,UADc;AAEpBC,OAAK,UAFe;AAGpBC,WAAS,UAHW;AAIpBC,UAAQ,UAJY;AAKpBC,QAAM,UALc;AAMpBC,WAAS;AANW,CAAtB;;AASA,MAAMC,gBAAgB;AACpBN,QAAM,UADc;AAEpBC,OAAK,UAFe;AAGpBM,WAAS,UAHW;AAIpBJ,UAAQ,UAJY;AAKpBC,QAAM,UALc;AAMpBC,WAAS;AANW,CAAtB;;AASA,SAASG,QAAT,CAAkBP,GAAlB,EAAuB;AACrB,SAAOA,IAAIQ,KAAJ,CAAU,mDAAV,CAAP;AACD;;AAED,SAASC,gBAAT,CAA0BC,IAA1B,EAAgC;AAC9B,QAAMC,SAAS,EAAf;AACAC,SAAOC,IAAP,CAAYf,aAAZ,EAA2BgB,OAA3B,CAAoCC,KAAD,IAAW;AAC5C,UAAMC,OAAOlB,cAAciB,KAAd,CAAb;AACA,QAAIC,SAAS,UAAT,IAAuB,CAACN,KAAKK,KAAL,CAA5B,EAAyC;AACvCJ,aAAOM,IAAP,CAAa,GAAEF,KAAM,cAArB;AACD;AACF,GALD;AAMA,QAAMf,MAAMU,KAAKV,GAAjB;AACA,MAAIA,OAAO,CAACO,SAASP,GAAT,CAAZ,EAA2B;AACzBW,WAAOM,IAAP,CAAY,wDAAZ;AACD;AACD,MAAIN,OAAOO,MAAP,GAAgB,CAApB,EAAuB;AACrB,WAAOP,MAAP;AACD;AACD,SAAO,IAAP;AACD;;AAED,SAASQ,YAAT,CAAsBT,IAAtB,EAA4B;AAC1B,QAAMC,SAAS,EAAf;AACAC,SAAOC,IAAP,CAAYR,aAAZ,EAA2BS,OAA3B,CAAoCC,KAAD,IAAW;AAC5C,UAAMC,OAAOX,cAAcU,KAAd,CAAb;AACA,QAAIC,SAAS,UAAT,IAAuB,CAACN,KAAKK,KAAL,CAA5B,EAAyC;AACvCJ,aAAOM,IAAP,CAAa,GAAEF,KAAM,cAArB;AACD;AACF,GALD;AAMA,QAAMf,MAAMU,KAAKV,GAAjB;AACA,MAAIA,OAAO,CAACO,SAASP,GAAT,CAAZ,EAA2B;AACzBW,WAAOM,IAAP,CAAY,wDAAZ;AACD;AACD,MAAIN,OAAOO,MAAP,GAAgB,CAApB,EAAuB;AACrB,WAAOP,MAAP;AACD;AACD,SAAO,IAAP;AACD;;AAED,SAASF,gBAAT,EAA2BU,YAA3B","file":"bookmark.js","sourcesContent":["\nconst siteFieldType = {\n  name: 'required',\n  url: 'required',\n  created: 'required',\n  author: 'optional',\n  tags: 'optional',\n  comment: 'optional'\n};\n\nconst editFieldType = {\n  name: 'required',\n  url: 'required',\n  updated: 'required',\n  author: 'optional',\n  tags: 'optional',\n  comment: 'optional'\n};\n\nfunction validUrl(url) {\n  return url.match(/^(https?:\\/\\/){1}[^-][a-z0-9.-]+[^-]\\.[a-z]{2,4}$/);\n}\n\nfunction validateBookmark(site) {\n  const errors = [];\n  Object.keys(siteFieldType).forEach((field) => {\n    const type = siteFieldType[field];\n    if (type === 'required' && !site[field]) {\n      errors.push(`${field} is required`);\n    }\n  });\n  const url = site.url;\n  if (url && !validUrl(url)) {\n    errors.push('Please enter a valid url. E.g., http://www.example.com');\n  }\n  if (errors.length > 0) {\n    return errors;\n  }\n  return null;\n}\n\nfunction validateEdit(site) {\n  const errors = [];\n  Object.keys(editFieldType).forEach((field) => {\n    const type = editFieldType[field];\n    if (type === 'required' && !site[field]) {\n      errors.push(`${field} is required`);\n    }\n  });\n  const url = site.url;\n  if (url && !validUrl(url)) {\n    errors.push('Please enter a valid url. E.g., http://www.example.com');\n  }\n  if (errors.length > 0) {\n    return errors;\n  }\n  return null;\n}\n\nexport { validateBookmark, validateEdit };\n"]}